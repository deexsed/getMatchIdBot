"""
–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
"""
import logging
from telegram import Update
from telegram.ext import CallbackContext
from utils.decorators import handle_errors
from utils.bot_commands import DEFAULT_COMMANDS

logger = logging.getLogger(__name__)

@handle_errors
async def start_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    commands_text = "\n".join([
        f"/{cmd.command} - {cmd.description}" for cmd in DEFAULT_COMMANDS
    ])
    
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DotaStatsBot!\n\n"
        "ü§ñ –Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∞—à–∏—Ö –º–∞—Ç—á–µ–π –≤ Dota 2.\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        f"{commands_text}\n\n"
        "üìù –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /newgame –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç—á–∞ –∏–ª–∏ "
        "/stats –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.\n\n"
        "üë®‚Äçüíª *–ê–≤—Ç–æ—Ä:* @deexsed"
    )
    
    await update.message.reply_text(
        welcome_text,
        parse_mode='Markdown'
    )

@handle_errors
async def cancel_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel"""
    context.user_data.clear()
    await update.message.reply_text(
        '–í–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞.'
    )

@handle_errors
async def error_handler(update: Update, context: CallbackContext) -> None:
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    error = context.error
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}")
    
    if update and update.effective_message:
        try:
            if context.user_data and context.user_data.get('waiting_for_match_id'):
                await update.effective_message.reply_text(
                    "–í–≤–µ–¥–∏—Ç–µ ID –º–∞—Ç—á–∞:"
                )
            else:
                await update.effective_message.reply_text(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞."
                )
                if context.user_data:
                    context.user_data.clear()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")
    else:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: update –∏–ª–∏ effective_message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç") 