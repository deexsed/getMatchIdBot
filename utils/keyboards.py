"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞
"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from services.hero_service import HEROES, HEROES_PER_PAGE

def get_match_outcome_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ö–æ–¥–∞ –º–∞—Ç—á–∞"""
    keyboard = [
        [InlineKeyboardButton("–ü–æ–±–µ–¥–∞", callback_data='win')],
        [InlineKeyboardButton("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ", callback_data='lose')]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_restart_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–æ–≤–æ–≥–æ –º–∞—Ç—á–∞"""
    keyboard = [[InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Ç—á", callback_data='restart')]]
    return InlineKeyboardMarkup(keyboard)

def get_period_stats_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    keyboard = [
        [InlineKeyboardButton("–ó–∞ 24 —á–∞—Å–∞", callback_data='stats_24h')],
        [InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data='stats_week')],
        [InlineKeyboardButton("–ó–∞ –º–µ—Å—è—Ü", callback_data='stats_month')]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_hero_selection_keyboard(page=1, search_query=None):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ—è"""
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞ –≤ –Ω–∞—á–∞–ª–µ
    keyboard.append([InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="search")])
    
    if search_query:
        filtered_heroes = [hero for hero in HEROES if search_query.lower() in hero.lower()]
        heroes_to_show = filtered_heroes
    else:
        start_idx = (page - 1) * HEROES_PER_PAGE
        end_idx = start_idx + HEROES_PER_PAGE
        heroes_to_show = HEROES[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≥–µ—Ä–æ–µ–≤ –ø–æ —Ç—Ä–∏ –≤ —Ä—è–¥
    for i in range(0, len(heroes_to_show), 3):
        row = []
        for j in range(3):
            if i + j < len(heroes_to_show):
                row.append(InlineKeyboardButton(
                    heroes_to_show[i + j], 
                    callback_data=f"hero:{heroes_to_show[i + j]}"
                ))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if not search_query:
        nav_buttons = []
        max_pages = len(HEROES) // HEROES_PER_PAGE + (1 if len(HEROES) % HEROES_PER_PAGE > 0 else 0)
        
        if page > 1:
            nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"page:{page-1}"))
        if page < max_pages:
            nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f"page:{page+1}"))
        
        if nav_buttons:
            keyboard.append(nav_buttons)
    
    return InlineKeyboardMarkup(keyboard) 