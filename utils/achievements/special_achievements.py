"""–û—Å–æ–±—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
from datetime import datetime, timedelta
from .base import Achievement, AchievementCategory, AchievementProgress

SPECIAL_ACHIEVEMENTS = [
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='early_bird',
        name='–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
        description='–í—ã–∏–≥—Ä–∞—Ç—å 5 –∏–≥—Ä –¥–æ 9 —É—Ç—Ä–∞',
        emoji='üåÖ',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='night_owl',
        name='–ù–æ—á–Ω–∞—è —Å–æ–≤–∞',
        description='–í—ã–∏–≥—Ä–∞—Ç—å 5 –∏–≥—Ä –ø–æ—Å–ª–µ 23:00',
        emoji='ü¶â',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='lunch_break',
        name='–û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤',
        description='–í—ã–∏–≥—Ä–∞—Ç—å 10 –∏–≥—Ä –≤ –æ–±–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è (12:00-14:00)',
        emoji='üçΩÔ∏è',
        category='–û—Å–æ–±—ã–µ'
    ),
    
    # –°–µ–∑–æ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='summer_grinder',
        name='–õ–µ—Ç–Ω–∏–π –≥—Ä–∏–Ω–¥',
        description='–°—ã–≥—Ä–∞—Ç—å 100 –∏–≥—Ä –ª–µ—Ç–æ–º',
        emoji='‚òÄÔ∏è',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='winter_warrior',
        name='–ó–∏–º–Ω–∏–π –≤–æ–∏–Ω',
        description='–°—ã–≥—Ä–∞—Ç—å 100 –∏–≥—Ä –∑–∏–º–æ–π',
        emoji='‚ùÑÔ∏è',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='new_year_spirit',
        name='–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –¥—É—Ö',
        description='–°—ã–≥—Ä–∞—Ç—å –≤ –Ω–æ–≤–æ–≥–æ–¥–Ω—é—é –Ω–æ—á—å',
        emoji='üéÑ',
        category='–û—Å–æ–±—ã–µ'
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Å–µ—Ä–∏–∏
    Achievement(
        id='comeback_master',
        name='–ú–∞—Å—Ç–µ—Ä –∫–∞–º–±—ç–∫–æ–≤',
        description='–í—ã–∏–≥—Ä–∞—Ç—å –ø–æ—Å–ª–µ —Å–µ—Ä–∏–∏ –∏–∑ 7+ –ø–æ—Ä–∞–∂–µ–Ω–∏–π',
        emoji='üîÑ',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='perfect_week',
        name='–ò–¥–µ–∞–ª—å–Ω–∞—è –Ω–µ–¥–µ–ª—è',
        description='–í—ã–∏–≥—Ä–∞—Ç—å –≤—Å–µ –∏–≥—Ä—ã –∑–∞ –Ω–µ–¥–µ–ª—é (–º–∏–Ω. 10 –∏–≥—Ä)',
        emoji='‚ú®',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='weekend_marathon',
        name='–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü –≤—ã—Ö–æ–¥–Ω—ã—Ö',
        description='–°—ã–≥—Ä–∞—Ç—å 20 –∏–≥—Ä –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ',
        emoji='üèÉ',
        category='–û—Å–æ–±—ã–µ'
    ),
    
    # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='party_player',
        name='–ö–æ–º–∞–Ω–¥–Ω—ã–π –∏–≥—Ä–æ–∫',
        description='–°—ã–≥—Ä–∞—Ç—å 50 –∏–≥—Ä –≤ –≥—Ä—É–ø–ø–µ',
        emoji='üë•',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='duo_master',
        name='–ú–∞—Å—Ç–µ—Ä –¥—É–æ',
        description='–í—ã–∏–≥—Ä–∞—Ç—å 20 –∏–≥—Ä —Å –æ–¥–Ω–∏–º —Ç–∏–º–º–µ–π—Ç–æ–º',
        emoji='ü§ù',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='team_spirit',
        name='–ö–æ–º–∞–Ω–¥–Ω—ã–π –¥—É—Ö',
        description='–í—ã–∏–≥—Ä–∞—Ç—å 10 –∏–≥—Ä –≤ –ø–æ–ª–Ω–æ–π –≥—Ä—É–ø–ø–µ',
        emoji='üé≠',
        category='–û—Å–æ–±—ã–µ'
    ),
    
    # –†–µ–¥–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='holiday_warrior',
        name='–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –≤–æ–∏–Ω',
        description='–ò–≥—Ä–∞—Ç—å –≤ –∫–∞–∂–¥—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –º–µ—Å—è—Ü–∞',
        emoji='üéâ',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='dedication',
        name='–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å',
        description='–ò–≥—Ä–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞',
        emoji='üìÖ',
        category='–û—Å–æ–±—ã–µ'
    ),
    Achievement(
        id='all_day_grinder',
        name='–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –∏–≥—Ä–æ–∫',
        description='–°—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–∂–¥—ã–π —á–∞—Å —Å—É—Ç–æ–∫',
        emoji='üïê',
        category='–û—Å–æ–±—ã–µ'
    )
]

class SpecialAchievements(AchievementCategory):
    def __init__(self):
        super().__init__('–û—Å–æ–±—ã–µ', SPECIAL_ACHIEVEMENTS)
    
    def check(self, stats, mmr_data=None):
        earned = []
        progress = AchievementProgress()
        
        if not stats:
            return earned, progress  # –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º tuple
        
        matches = stats.get('matches', [])
        
        if not matches:
            return earned, progress
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        early_wins = 0
        night_wins = 0
        lunch_wins = 0
        hours_played = set()
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–∑–æ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        summer_games = 0
        winter_games = 0
        new_year_played = False
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ—Ä–∏–π
        lose_streak = 0
        weekly_games = {}
        weekend_games = 0
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        party_games = 0
        duo_games = {}
        full_team_wins = 0
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∫–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        daily_games = {}
        holidays = set()  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        
        for match in matches:
            if not match.get('played_at'):
                continue
                
            try:
                match_time = datetime.strptime(match['played_at'], '%Y-%m-%d %H:%M:%S')
                hour = match_time.hour
                date = match_time.date()
                month = match_time.month
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                hours_played.add(hour)
                if match.get('outcome') == 'win':
                    if 5 <= hour < 9:
                        early_wins += 1
                    elif 23 <= hour or hour < 5:
                        night_wins += 1
                    elif 12 <= hour < 14:
                        lunch_wins += 1
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                if 6 <= month <= 8:  # –õ–µ—Ç–æ
                    summer_games += 1
                elif month in [12, 1, 2]:  # –ó–∏–º–∞
                    winter_games += 1
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤–æ–≥–æ–¥–Ω—é—é –Ω–æ—á—å
                if month == 12 and date.day == 31:
                    if 22 <= hour or hour < 2:
                        new_year_played = True
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–∏–∏
                if match.get('outcome') == 'lose':
                    lose_streak += 1
                else:
                    if lose_streak >= 7:
                        earned.append('comeback_master')
                    lose_streak = 0
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–≥—Ä—ã –ø–æ –Ω–µ–¥–µ–ª—è–º –∏ –≤—ã—Ö–æ–¥–Ω—ã–º
                week_num = date.isocalendar()[1]
                if week_num not in weekly_games:
                    weekly_games[week_num] = {'total': 0, 'wins': 0}
                weekly_games[week_num]['total'] += 1
                if match.get('outcome') == 'win':
                    weekly_games[week_num]['wins'] += 1
                
                if date.weekday() >= 5:  # –í—ã—Ö–æ–¥–Ω—ã–µ
                    weekend_games += 1
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                party_size = len(match.get('party', []))
                if party_size > 1:
                    party_games += 1
                    if party_size == 5:
                        if match.get('outcome') == 'win':
                            full_team_wins += 1
                    
                    # –°—á–∏—Ç–∞–µ–º –∏–≥—Ä—ã —Å –∫–∞–∂–¥—ã–º —Ç–∏–º–º–µ–π—Ç–æ–º
                    for teammate in match.get('party', []):
                        if teammate != stats.get('player_id'):
                            duo_games[teammate] = duo_games.get(teammate, 0) + 1
                
                # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –¥–Ω—è–º
                if date not in daily_games:
                    daily_games[date] = True
                
            except (ValueError, TypeError):
                continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if early_wins >= 5:
            earned.append('early_bird')
        if night_wins >= 5:
            earned.append('night_owl')
        if lunch_wins >= 10:
            earned.append('lunch_break')
        
        if summer_games >= 100:
            earned.append('summer_grinder')
        if winter_games >= 100:
            earned.append('winter_warrior')
        if new_year_played:
            earned.append('new_year_spirit')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–µ–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        for week_stats in weekly_games.values():
            if week_stats['total'] >= 10 and week_stats['total'] == week_stats['wins']:
                earned.append('perfect_week')
        
        if weekend_games >= 20:
            earned.append('weekend_marathon')
        
        if party_games >= 50:
            earned.append('party_player')
        if any(games >= 20 for games in duo_games.values()):
            earned.append('duo_master')
        if full_team_wins >= 10:
            earned.append('team_spirit')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–¥–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if len(hours_played) == 24:
            earned.append('all_day_grinder')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–≥—Ä—ã
        days_in_month = max(daily_games.keys()).day if daily_games else 0
        if days_in_month >= 28:  # –£—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–∞—Ö
            earned.append('dedication')
        
        return earned, progress 