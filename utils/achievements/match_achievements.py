"""–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π"""
from datetime import datetime
from .base import Achievement, AchievementCategory, AchievementProgress

MATCH_ACHIEVEMENTS = [
    # –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='first_match',
        name='–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
        description='–ó–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤—ã–π –º–∞—Ç—á',
        emoji='üë∂',
        category='–ú–∞—Ç—á–∏',
        progress_max=1
    ),
    Achievement(
        id='ten_matches',
        name='–ù–∞—á–∏–Ω–∞—é—â–∏–π',
        description='–°—ã–≥—Ä–∞—Ç—å 10 –º–∞—Ç—á–µ–π',
        emoji='üéÆ',
        category='–ú–∞—Ç—á–∏',
        progress_max=10,
        requires='first_match'
    ),
    Achievement(
        id='fifty_matches',
        name='–õ—é–±–∏—Ç–µ–ª—å',
        description='–°—ã–≥—Ä–∞—Ç—å 50 –º–∞—Ç—á–µ–π',
        emoji='üé≤',
        category='–ú–∞—Ç—á–∏',
        progress_max=50,
        requires='ten_matches'
    ),
    Achievement(
        id='hundred_matches',
        name='–í–µ—Ç–µ—Ä–∞–Ω',
        description='–°—ã–≥—Ä–∞—Ç—å 100 –º–∞—Ç—á–µ–π',
        emoji='üèÜ',
        category='–ú–∞—Ç—á–∏'
    ),
    
    # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='five_hundred_matches',
        name='–û–ø—ã—Ç–Ω—ã–π –±–æ–µ—Ü',
        description='–°—ã–≥—Ä–∞—Ç—å 500 –º–∞—Ç—á–µ–π',
        emoji='üéØ',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='thousand_matches',
        name='–ú–∞—Å—Ç–µ—Ä',
        description='–°—ã–≥—Ä–∞—Ç—å 1000 –º–∞—Ç—á–µ–π',
        emoji='üí´',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='two_thousand_matches',
        name='–≠–ª–∏—Ç–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 2000 –º–∞—Ç—á–µ–π',
        emoji='üåü',
        category='–ú–∞—Ç—á–∏'
    ),
    
    # –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    Achievement(
        id='five_thousand_matches',
        name='–õ–µ–≥–µ–Ω–¥–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 5000 –º–∞—Ç—á–µ–π',
        emoji='üëë',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='ten_thousand_matches',
        name='–ë–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π',
        description='–°—ã–≥—Ä–∞—Ç—å 10000 –º–∞—Ç—á–µ–π',
        emoji='‚ö°',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='fifteen_thousand_matches',
        name='–ù–æ—É–ª–∞–π—Ñ–µ—Ä',
        description='–°—ã–≥—Ä–∞—Ç—å 15000 –º–∞—Ç—á–µ–π',
        emoji='üî±',
        category='–ú–∞—Ç—á–∏'
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Å–µ—Ä–∏–∏
    Achievement(
        id='daily_player',
        name='–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∏–≥—Ä–æ–∫',
        description='–°—ã–≥—Ä–∞—Ç—å 3 –∏–≥—Ä—ã –∑–∞ –¥–µ–Ω—å',
        emoji='üìÖ',
        category='–ú–∞—Ç—á–∏',
        progress_max=3
    ),
    Achievement(
        id='weekend_warrior',
        name='–í–æ–∏–Ω –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è',
        description='–°—ã–≥—Ä–∞—Ç—å 10 –∏–≥—Ä –∑–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ',
        emoji='üé™',
        category='–ú–∞—Ç—á–∏',
        progress_max=10,
        requires='daily_player'
    ),
    Achievement(
        id='marathon_runner',
        name='–ú–∞—Ä–∞—Ñ–æ–Ω–µ—Ü',
        description='–°—ã–≥—Ä–∞—Ç—å 20 –∏–≥—Ä –∑–∞ –¥–µ–Ω—å',
        emoji='üèÉ',
        category='–ú–∞—Ç—á–∏',
        progress_max=20,
        requires='weekend_warrior',
        hidden=True  # –°–∫—Ä—ã—Ç–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ
    Achievement(
        id='weekly_dedication',
        name='–ù–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å',
        description='–ò–≥—Ä–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
        emoji='üìä',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='monthly_master',
        name='–ú–∞—Å—Ç–µ—Ä –º–µ—Å—è—Ü–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 100 –∏–≥—Ä –∑–∞ –º–µ—Å—è—Ü',
        emoji='üìà',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='seasonal_veteran',
        name='–í–µ—Ç–µ—Ä–∞–Ω —Å–µ–∑–æ–Ω–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 300 –∏–≥—Ä –∑–∞ —Å–µ–∑–æ–Ω',
        emoji='üåü',
        category='–ú–∞—Ç—á–∏'
    ),
    
    # –û—Å–æ–±—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –º–∞—Ç—á–∏
    Achievement(
        id='morning_person',
        name='–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 10 –∏–≥—Ä –¥–æ 9 —É—Ç—Ä–∞',
        emoji='üåÖ',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='night_owl',
        name='–ù–æ—á–Ω–∞—è —Å–æ–≤–∞',
        description='–°—ã–≥—Ä–∞—Ç—å 10 –∏–≥—Ä –ø–æ—Å–ª–µ 23:00',
        emoji='üåô',
        category='–ú–∞—Ç—á–∏'
    ),
    Achievement(
        id='prime_time_player',
        name='–ü—Ä–∞–π–º-—Ç–∞–π–º –∏–≥—Ä–æ–∫',
        description='–°—ã–≥—Ä–∞—Ç—å 50 –∏–≥—Ä –≤ –ø—Ä–∞–π–º-—Ç–∞–π–º (19:00-23:00)',
        emoji='‚≠ê',
        category='–ú–∞—Ç—á–∏'
    )
]

class MatchAchievements(AchievementCategory):
    def __init__(self):
        super().__init__('–ú–∞—Ç—á–∏', MATCH_ACHIEVEMENTS)
    
    def check(self, stats, mmr_data=None):
        earned = []
        progress = AchievementProgress()
        
        if not stats:
            return earned, progress  # –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º tuple
        
        total_games = stats.get('total_games', 0)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä
        thresholds = [
            (1, 'first_match'),
            (10, 'ten_matches'),
            (50, 'fifty_matches'),
            (100, 'hundred_matches'),
            (500, 'five_hundred_matches'),
            (1000, 'thousand_matches'),
            (2000, 'two_thousand_matches'),
            (5000, 'five_thousand_matches'),
            (10000, 'ten_thousand_matches'),
            (15000, 'fifteen_thousand_matches')
        ]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        for threshold, achievement_id in thresholds:
            current = min(total_games, threshold)
            progress.update(achievement_id, current)
            if total_games >= threshold:
                earned.append(achievement_id)
                progress.unlock(achievement_id, datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∏–≥—Ä—ã –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        morning_games = 0
        night_games = 0
        prime_time_games = 0
        daily_games = {}
        
        for match in stats.get('matches', []):
            if not match.get('played_at'):
                continue
                
            try:
                match_time = datetime.strptime(match['played_at'], '%Y-%m-%d %H:%M:%S')
                hour = match_time.hour
                date = match_time.date()
                
                # –°—á–∏—Ç–∞–µ–º –∏–≥—Ä—ã –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫
                if 5 <= hour < 9:
                    morning_games += 1
                elif 23 <= hour or hour < 5:
                    night_games += 1
                elif 19 <= hour < 23:
                    prime_time_games += 1
                
                # –°—á–∏—Ç–∞–µ–º –∏–≥—Ä—ã –∑–∞ –¥–µ–Ω—å
                daily_games[date] = daily_games.get(date, 0) + 1
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                progress.update('daily_player', daily_games[date])
                
                if daily_games[date] >= 3:
                    earned.append('daily_player')
                    progress.unlock('daily_player', match['played_at'])
                
                if daily_games[date] >= 20:
                    earned.append('marathon_runner')
                    progress.unlock('marathon_runner', match['played_at'])
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ
                if date.weekday() >= 5:  # –°—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
                    weekend_games = sum(1 for d, count in daily_games.items() 
                                     if d.weekday() >= 5)
                    progress.update('weekend_warrior', weekend_games)
                    if weekend_games >= 10:
                        earned.append('weekend_warrior')
                        progress.unlock('weekend_warrior', match['played_at'])
                
            except (ValueError, TypeError):
                continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è
        if morning_games >= 10:
            earned.append('morning_person')
            progress.unlock('morning_person', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        if night_games >= 10:
            earned.append('night_owl')
            progress.unlock('night_owl', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        if prime_time_games >= 50:
            earned.append('prime_time_player')
            progress.unlock('prime_time_player', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—è—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        month_games = sum(daily_games.values())
        if month_games >= 100:
            earned.append('monthly_master')
            progress.unlock('monthly_master', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        if month_games >= 300:
            earned.append('seasonal_veteran')
            progress.unlock('seasonal_veteran', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        
        return earned, progress 